#!/bin/bash

# Ensure Homebrew and system binaries are available inside Alacritty
export PATH="/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin:/Users/tim/dev/dotfiles/qutebrowser/bin:$PATH"
# Run qutebrowser/bin/qute-plugin-fzfbookmarks
#
# Add ~/.config/qutebrowser/bin to $PATH
# in your .bashrc/.zshrc file or here:
# export PATH="$HOME/.config/qutebrowser/bin:$PATH"

# By default, run the 'history' mode
[[ -z $1 ]] && mode="history" || mode="$1"

plgdir="/tmp/qute-plugins"
[[ ! -d $plgdir ]] && mkdir "$plgdir"

selectfile="$plgdir/qute-plugin-fzfhistory-selection"
[[ -s $selectfile ]] && echo -n "" > $selectfile

# Prefer absolute Alacritty on macOS; fallback to PATH
if [[ -x "/opt/homebrew/bin/alacritty" ]]; then
  term="/opt/homebrew/bin/alacritty"
else
  term="alacritty"
fi
config_file="/Users/tim/dev/dotfiles/qutebrowser/alacritty-popup.toml"
alacritty_log="/tmp/qute-alacritty.log"

# Cleanup any lingering alacritty processes from previous runs (before launching)
pkill -f "alacritty.*fzfhistory" 2>/dev/null || true

# Run the pop-up window
# Use absolute shell and absolute plugin path to avoid PATH issues
plugin_path="/Users/tim/dev/dotfiles/qutebrowser/bin/qute-plugin-fzfhistory"
$term --config-file "$config_file" -e /bin/bash -c "exec '$plugin_path' '$mode' '$selectfile'; exit" 2> "$alacritty_log"

# DEBUG: Log the content of the selection file
cat "$selectfile" > /tmp/qute-selection.log

# Qutebrowser will open the urls passed to QUTE_FIFO
if [[ -s $selectfile ]]; then
   echo "Final check, QUTE_FIFO is: $QUTE_FIFO" >> /tmp/qute-debug.log
   while read url; do
      echo "Command to execute: open -tr $url" >> /tmp/qute-debug.log
      echo "open -tr $url" >> "$QUTE_FIFO"
   done < $selectfile
   echo "Finished writing to FIFO." >> /tmp/qute-debug.log
fi
